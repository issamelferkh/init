#!/bin/bash

_STOP='\033[0m'
_BLACK='\033[30m'
_RED='\033[31m'
_GREEN='\033[32m'
_CYAN='\033[36m'

function header()
{
	clear
	echo "$_CYAN"
echo "  _____       _  _      _____ _               _             "
echo " |_   _|     (_)| |    / ____| |             | |            "
echo "   | |  _ __  _ | |_  | |    | |__   ___  ___| | _____ _ __ "
echo "   | | | '_ \| || __| | |    | '_ \ / _ \/ __| |/ / _ \ '__|"
echo "  _| |_| | | | || |_  | |____| | | |  __/ (__|   <  __/ |   "
echo " |_____|_|_|_|_| \__|  \_____|_| |_|\___|\___|_|\_\___|_|   "

	echo "$_STOP"
}

function networkpart()
{
	cd "$PATHE/network/"
#Q 1
	Y_ANSWER=$(sh 01)
	V_ANSWER=$(ifconfig -l)
	if [ "$Y_ANSWER" == "$V_ANSWER" ]; then
		echo "01 $_GREEN[OK] $_STOP"
	else
		echo "01 $_RED[KO] $_STOP"
		echo "you wrote this :  "
		echo " $Y_ANSWER"
	fi
	sleep .5
#Q 2
	Y_ANSWER=$(cat 02 | head -n 1)
	Y_ANSWER1=$(cat 02 | tail -n 1)
#chui pas encore sur
	echo "02 a) : $_YELLOW $Y_ANSWER $_STOP"
	echo "02 b) : $_YELLOW $Y_ANSWER1 $_STOP"
	sleep .5
#Q 3
	Y_ANSWER=$(sh 03)
	V_ANSWER=$(ifconfig en1)
	if [ "$Y_ANSWER" == "$V_ANSWER" ]; then
		echo "03 $_GREEN[OK] $_STOP"
	else
		echo "03 $_RED[KO] $_STOP"
		echo "you wrote this :  "
		echo " $Y_ANSWER"
	fi
	sleep .5
#Q 4
	Y_ANSWER=$(sh 04)
	V_ANSWER=$(netstat -nr | grep default | grep en)
	if [ "$Y_ANSWER" == "$V_ANSWER" ]; then
		echo "04 $_GREEN[OK] $_STOP"
	else
		echo "04 $_RED[KO] $_STOP"
		echo "you wrote this :  "
		echo " $Y_ANSWER"
	fi
	sleep .5
#Q 5
	Y_ANSWER=$(cat 05)
	V_ANSWER="nslookup slash16.org"
	if [ "$Y_ANSWER" == "$V_ANSWER" ]; then
		echo "05 $_GREEN[OK] $_STOP"
	else
		echo "05 $_RED[KO] $_STOP"
		echo "you wrote this :  "
		echo " $Y_ANSWER"
	fi
	sleep .5
#Q 6
	Y_ANSWER=$(cat 06)
	V_ANSWER="/etc/resolv.conf"
	if [ "$Y_ANSWER" == "$V_ANSWER" ]; then
		echo "06 $_GREEN[OK] $_STOP"
	else
		echo "06 $_RED[KO] $_STOP"
		echo "you wrote this :  "
		echo " $Y_ANSWER"
	fi
	sleep .5
#Q 7
	Y_ANSWER=$(cat 07)
	V_ANSWER="nslookup slash16.org 8.8.8.8"
	if [ "$Y_ANSWER" == "$V_ANSWER" ]; then
		echo "07 $_GREEN[OK] $_STOP"
	else
		echo "07 $_RED[KO] $_STOP"
		echo "you wrote this :  "
		echo " $Y_ANSWER"
	fi
	sleep .5
#Q 8
	Y_ANSWER=$(cat 08)
	V_ANSWER="AWS (Amazon Web Services)"
	if [ "$Y_ANSWER" == "$V_ANSWER" ]; then
		echo "08 $_GREEN[OK] $_STOP"
	else
		echo "08 $_RED[KO] $_STOP"
		echo "you wrote this :  "
		echo " $Y_ANSWER"
	fi
	sleep .5
#Q 9
	Y_ANSWER=$(cat 09)
	V_ANSWER="163.172.250.11"
	if [ "$Y_ANSWER" == "$V_ANSWER" ]; then
		echo "09 $_GREEN[OK] $_STOP"
	else
		echo "09 $_RED[KO] $_STOP"
		echo "you wrote this :  "
		echo " $Y_ANSWER"
	fi
	sleep .5
#Q 10
	Y_ANSWER=$(cat 10)
	V_ANSWER="traceroute slash16.org"
	if [ "$Y_ANSWER" == "$V_ANSWER" ]; then
		echo "10 $_GREEN[OK] $_STOP"
	else
		echo "10 $_RED[KO] $_STOP"
		echo "you wrote this :  "
		echo " $Y_ANSWER"
	fi
	sleep .5
#Q 11
	Y_ANSWER=$(cat 11)
	V_ANSWER="nat 10.21.1.1"
	if [ "$Y_ANSWER" == "$V_ANSWER" ]; then
		echo "11 $_GREEN[OK] $_STOP"
	else
		echo "11 $_RED[KO] $_STOP"
		echo "you wrote this :  "
		echo " $Y_ANSWER"
	fi
	sleep .5
#Q 12
	Y_ANSWER=$(cat 12)
	V_ANSWER=$(ipconfig getifaddr en0)
	if [ "$Y_ANSWER" == "$V_ANSWER" ]; then
		echo "12 $_GREEN[OK] $_STOP"
	else
		echo "12 $_RED[KO] $_STOP"
		echo "you wrote this :  "
		echo " $Y_ANSWER"
	fi
	sleep .5
#Q 13
	Y_ANSWER=$(cat 13)
	V_ANSWER=$(nslookup `ipconfig getifaddr en0` | grep name | cut -c33-)
	if [ "$Y_ANSWER" == "$V_ANSWER" ]; then
		echo "13 $_GREEN[OK] $_STOP"
	else
		echo "13 $_RED[KO] $_STOP"
		echo "you wrote this :  "
		echo " $Y_ANSWER"
	fi
	sleep .5
#Q 14
	Y_ANSWER=$(cat 14)
	V_ANSWER="/etc/hosts"
	if [ "$Y_ANSWER" == "$V_ANSWER" ]; then
		echo "14 $_GREEN[OK] $_STOP"
	else
		echo "14 $_RED[KO] $_STOP"
		echo "you wrote this :  "
		echo " $Y_ANSWER"
	fi
	sleep .5
#Q 15
	Y_ANSWER=$(cat 15)
	V_ANSWER="46.19.122.85    intra.42.fr"
	if [ "$Y_ANSWER" == "$V_ANSWER" ]; then
		echo "15 $_GREEN[OK] $_STOP"
	else
		echo "15 $_RED[KO] $_STOP"
		echo "you wrote this :  "
		echo " $Y_ANSWER"
	fi
	sleep .5
}

function systempart()
{
	echo "---------Coming Soon-----------"
}

function scriptpart()
{
	echo "---------Coming Soon-----------"
}

function creditspart()
{
	echo "$_CYAN"
	echo "-------------About-------------"
	echo ""
	echo "By: iel-ferk"
	echo ""
	echo "email: (iel-ferk@student.42.fr)"
	echo "     __ ____  _____ ______ "  
	echo "    /_ |\__ \ \___ \\___  |  "                                   
	echo "     | | __) | __) |   / /  "                                    
	echo "     | ||__ < |__ <   / /  "                                     
	echo "     | | __) | __) | / /  "                                      
	echo "     |_|____/ ____/ /_/ "
	echo "$_STOP"

}

while true :
do
	header
	read -p $'Path of Your Project (Init) : ' -e PATHE
	if [ -d "$PATHE" ]; then
		break;
	fi
done

clear
while true :
do

	header
	echo "$_CYAN"
	echo "		PY_ANSWERS	(1)             Network              "
	echo "		PY_ANSWERS	(2)             System               "
	echo "		PY_ANSWERS	(3)             Scripts              "
	echo "		PY_ANSWERS	(a)             About				 "
	echo "		PY_ANSWERS	(0)           	Exit                 "
	echo "$_STOP"

	read -p $'Your choice: ' -n 1 INPUT
	header
	case $INPUT in
		1)
			networkpart
		;;
		2)
			systempart
		;;
		3)
			scriptpart
		;;
		a)
			creditspart
		;;
		0) 
			break 
		;;
	esac
	read -p $'Press Enter to continue...'
done
clear
